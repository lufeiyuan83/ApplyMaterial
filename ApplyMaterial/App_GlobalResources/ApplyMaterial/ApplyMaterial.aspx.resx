<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ABCCode" xml:space="preserve">
    <value>ABC码</value>
  </data>
  <data name="ApplyMaterial" xml:space="preserve">
    <value>料号审批</value>
  </data>
  <data name="BuCode" xml:space="preserve">
    <value>抛送资料库</value>
  </data>
  <data name="CodeRule" xml:space="preserve">
    <value>编码原则</value>
  </data>
  <data name="EmailBody" xml:space="preserve">
    <value>hi {0}/r/n       您有一项料号申请，请登录系统进行审批,{1}</value>
  </data>
  <data name="FourthGroupCode" xml:space="preserve">
    <value>其他分群码四</value>
  </data>
  <data name="GroupCode" xml:space="preserve">
    <value>分群码</value>
  </data>
  <data name="GroupCodeCanNotBlank" xml:space="preserve">
    <value>分群码不能为空</value>
  </data>
  <data name="IsBonded" xml:space="preserve">
    <value>是否保税</value>
  </data>
  <data name="MaterialClass" xml:space="preserve">
    <value>料件分类</value>
  </data>
  <data name="MaterialId" xml:space="preserve">
    <value>物料编码</value>
  </data>
  <data name="MiddleClass" xml:space="preserve">
    <value>中分类</value>
  </data>
  <data name="NoAuth" xml:space="preserve">
    <value>您没有权限</value>
  </data>
  <data name="ProductionName" xml:space="preserve">
    <value>品名</value>
  </data>
  <data name="ProductionNameCanNotBlank" xml:space="preserve">
    <value>品名不能为空</value>
  </data>
  <data name="Remark" xml:space="preserve">
    <value>备注</value>
  </data>
  <data name="SaveAndCreate" xml:space="preserve">
    <value>保存并新增</value>
  </data>
  <data name="SaveFailed" xml:space="preserve">
    <value>保存失败</value>
  </data>
  <data name="SaveSuccessfully" xml:space="preserve">
    <value>保存成功</value>
  </data>
  <data name="SelectMiddleClass" xml:space="preserve">
    <value>请选择中分类</value>
  </data>
  <data name="SelectSubClass" xml:space="preserve">
    <value>请选择次分类</value>
  </data>
  <data name="SelectTopClass" xml:space="preserve">
    <value>请选择大分类</value>
  </data>
  <data name="SN" xml:space="preserve">
    <value>流水码</value>
  </data>
  <data name="SourceCode" xml:space="preserve">
    <value>来源码</value>
  </data>
  <data name="Specification" xml:space="preserve">
    <value>规格型号</value>
  </data>
  <data name="SpecificationCanNotBlank" xml:space="preserve">
    <value>规格型号不能为空</value>
  </data>
  <data name="SubClass" xml:space="preserve">
    <value>次分类</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>料号申请</value>
  </data>
  <data name="TopClass" xml:space="preserve">
    <value>大分类</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>单位</value>
  </data>
  <data name="Brand" xml:space="preserve">
    <value>品牌</value>
  </data>
  <data name="NoAccess" xml:space="preserve">
    <value>你无权发起审批，请联系管理员！</value>
  </data>
  <data name="Bonded" xml:space="preserve">
    <value>保税性质</value>
  </data>
  <data name="CustomerName" xml:space="preserve">
    <value>客户名称</value>
  </data>
  <data name="EnvironmentalRequirement" xml:space="preserve">
    <value>环保要求</value>
  </data>
  <data name="Manufacturer" xml:space="preserve">
    <value>制造商代码</value>
  </data>
  <data name="MaterialProperty" xml:space="preserve">
    <value>材料形态</value>
  </data>
  <data name="MaterialType" xml:space="preserve">
    <value>料号类别</value>
  </data>
  <data name="Process" xml:space="preserve">
    <value>制程</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>品名</value>
  </data>
  <data name="ProductNO" xml:space="preserve">
    <value>产品号</value>
  </data>
  <data name="SpecialName" xml:space="preserve">
    <value>专案名称</value>
  </data>
  <data name="ManufacturerBrand" xml:space="preserve">
    <value>制造商/品牌</value>
  </data>
  <data name="CoatingType" xml:space="preserve">
    <value>涂层类型</value>
  </data>
  <data name="WorkpieceType" xml:space="preserve">
    <value>工件类型</value>
  </data>
  <data name="MaterialProductName" xml:space="preserve">
    <value>材料品名</value>
  </data>
  <data name="NOTFoundCodeRule" xml:space="preserve">
    <value>找不到编码规则{0}的配置信息</value>
  </data>
  <data name="ExistMaterial" xml:space="preserve">
    <value>料号已经存在</value>
  </data>
  <data name="Rev" xml:space="preserve">
    <value>版次</value>
  </data>
  <data name="RepairMoldType" xml:space="preserve">
    <value>修模类型</value>
  </data>
</root>